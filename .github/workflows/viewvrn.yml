name: Build And Public VIEWVRN
on:
  push:
    branches:
    - "master"
  pull_request:
    branches:
    - "master"
env:
  #указываем репозиторий Docker контейнеров
  REGISTRY: "https://hub.docker.com/"
  # указываем имя изображения
  IMAGE_NAME: "dataenginer/viewvrn"
  #указываем имя контейнера
  CONTAINER_NAME: "dataenginer/viewvrn"
  #указываем путь к файлу окружения
  ENV_FILE_PATH: ".env.dev"
  #Путь к логам
  LOGS_PATH: "/var/log/prod"   

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
      
      - name: Set Up GO 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Test
        run: go test ./...
  
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: test
    steps: 
      #делаем чекаут кода 
      - name: Git CheckOut Repository
        uses: actions/checkout@v3
      - name: WHO A MI
        run: whoami

      #устанавливаем QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      #устанавливаем Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: WHO A MI
        run: whoami

      #авторизуемся на DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKER_HUB }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/viewvrn:latest
  
  deploy: 
    runs-on: [self-hosted]
    if: github.event_name == 'push'
    needs: build
    steps:
     - name: Deploy to VPS via SSH action
       uses: appleboy/ssh-action@v0.1.3
       with: 
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.USERNAME_HOST }}
        password: ${{ secrets.PASSWORD_HOST }}
        port: ${{ secrets.PORT_HOST }}
        envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,LOGS_PATH,ENV_FILE,CONTAINER_NAME
        script: |
          #Авторизуемся на сайте DOCKERHUB
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKER_HUB }}

          #останавливаем старый контейнер
          docker stop viewvrn
          #удаляем старый контейнер
          docker rm viewvrn

          docker pull dataenginer/viewvrn:latest

          #Запускаем новый контейнер с изображением
          docker run --restart=always -p 8082:8082  --name=viewvrn -d dataenginer/viewvrn:latest  